gcc -fopenmp crazy_scientist_v1_asf222.c -o test -lm
gcc -fopenmp crazy_scientist_v2_asf222.c -o test -lm
git commit -m "given up up question 2"
git add crazy_scientist_v3_asf222.c -m "good enough"
git commit -m "good enough"
git rm --all
git rm -all
git rm -n
git rm assignment_4
git rm assignment_4 -r
rm -rf assignment_4
git checkout implement_4
cd assignment_4
nano crazy_scientist_v3_asf222.c
rm -rm cmake-build-debug
rm -rf cmake-build-debug
rm -rf CMakeLists.txt
rm -rf main.c
rm -rf .idea
git add -all
git add --all
git commit -m "roundabout fix"
git pull origin implement_4
git push origin implement_4
rm -rf parallel_homework
git clone https://github.com/antonfreeman/parallel_homework.git
gcc -fopenmp crazy_scientist_v3_asf222.c -o test -lm
gcc -fopenmp crazy_scientist_v4_asf222.c -o test -lm
git commit crazy_scientist_v4_asf222.c -m "ERROR: does not go to do_work"
cd /
cd usr
cd share
cd zsh
ls -l
nano manjaro-zsh-config
cd cod
cd parallel_homework/assignment_4
cp crazy_scientist_v1_asf222.c crazy_scientist_v2_asf222.c
cp crazy_scientist_v1_asf222.c crazy_scientist_v3_asf222.c
cp crazy_scientist_v1_asf222.c crazy_scientist_v4_asf222.c
git add crazy_scientist_v1_asf222.c
git add crazy_scientist_v2_asf222.c
git add crazy_scientist_v3_asf222.c
git add crazy_scientist_v4_asf222.c
git commit -m "created files for problems 1-4"
gcc -fopenmp crazy_scientist_v1.c -o crazy_scientist_v1\
./crazy_scientist_v1
gcc -fopenmp crazy_scientist_v1.c -o crazy_scientist_v1 && ./crazy_scientist_v1
gcc -fopenmp crazy_scientist_v1_asf222.c -o crazy_scientist_v1 && ./crazy_scientist_v1
alias compile="gcc -fopenmp crazy_scientist_v$1_asf222.c -o crazy_scientist_v$1 && ./crazy_scientist_v$1" 
compile 1
compile(){}
compile
test(){gcc -fopenmp crazy_scientist_v$1_asf222.c -o crazy_scientist_v$1  ./crazy_scientist_v$1}
test 1
sudo apt install shotwell
git checkout anton_GW4
git checkout -b anton_GW4
cd code/CS_450_Group_4/group_project_4
git pull origin anton_GW4
gcc -fopenmp -lm GW4-openmp_a_question.c -o test
gcc -fopenmp GW4-openmp_a_question.c -o test1 -lm
gcc -fopenmp GW4-openmp_a_question.c -o test2 -lm
gcc -fopenmp GW4-openmp_a_question.c -o test3 -lm
./test2
./test3
./test1
gcc -fopenmp GW4-openmp_a_question.c -o test -lm
git add GW4-openmp_a_question.c
git commit -m 
git commit -m "added final changes"
git push origin anton_GW4
cd cs
cd CS_450_Group_4/
git branch
git branch -a
git checkout anton
git checkout emily_a5
./test 5
gcc -fopenmp question1.c -o test -lm
./test 300
./test 1000
sudo apt install iio-sensor-proxy inotify-tools
./rotate.sh
sudo ./rotate.sh
sudo
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
sudo apt-add-repository https://cli.github.com/packages
sudo apt install gh
gh
gh clone antonfreeman/marktext
gh repo clone antonfreeman/marktext
gh auth login
gsettings set org.gnome.shell.extensions.user-theme name "Flat-Remix"
sudo apt install flat-remix-gnome
gsettings set org.gnome.desktop.interface gtk-theme "Flat-Remix-GTK-Blue"
gsettings set org.gnome.desktop.interface gtk-theme "Flat-Remix-Yellow-Dark-fullPanel"
sudo add-apt-repository ppa:daniruiz/flat-remix
 sudo apt-get update
sudo apt-get install flat-remix-gnome
sudo apt install flat-remix-gtk
hello(){}
test
nano hello.txt
cd ../code/
echo("hello")
echo hello
sudo apt-get install 7zip
sudo apt-get install 7z
sudo apt-get install p7zip-full
7z
7z x SF-Font-Pro.dmg
cd SanFranciscoPro
code
sudo apt-get install libx11-dev libxkbfile-dev libsecret-1-dev libfontconfig-dev
sudo apt-get install chromium-browser
npm
npm install electron
git show
git checkout master
rm -rf CS_450_Group_4
git clone https://github.com/antonfreeman/CS_450_Group_4.git
cd CS_450_Group_4
cd assignment_05
cd -
mkdir group_project_5
cd code/advanced_C
cp homework_12 homework_13
python3
ffg
gcc hw12.c -o test
mv hw12.c hw13.c
rm -rf advanced_C
git clone https://github.com/antonfreeman/advanced_C.git
mkdir homework_13
cd homework_13
gcc hw13.c -o test
git add hw13.c
git commit -m "finished hw13"
cd Orchis-theme-master
git pull --all
sudo apt-get install libx11-dev libxkbfile-dev libsecret-1-dev libfontconfig-dev\
\

./marktext
git push origin develop
cd "/home/anton/code/advanced_C/homework_7"
./"hw7" undefined
dpkg -i code_1.51.1-1605051630_amd64.deb
sudo dpkg -i code_1.51.1-1605051630_amd64.deb
gsettings set org.gnome.shell.extensions.dash-to-dock intellihide false\

sudo apt install eog\

eog
gThumb
cd marktext/
cd linux-unpacked
cd ../..
cd code/curl-curl-7_50_0
gcc needed.c -o test
./test
git remote show origin
git checkout -b feature
yarn run test
git adduya/lib/ui/tablePicker/index.js
git add src/muya/lib/ui/tablePicker/index.js
git commit -m "fixed issue#2383"
yarn run unit
git push origin feature
yarn run lint
./install.sh yellow
cd code/marktext/
sudo apt install anyconnect
sudo apt-get install lib32z1 lib32ncurses5\

cd anyconnect-linux64-4.7.03052
cd vpn
./vpn_install.sh
ssh anton@antonfreeman.com
ssh e1rarygeoprm@antonfreeman.com
sudo apt-get update\

ssh asf222@monsoon.hpc.nau.edu
dpkg -i Minecraft.deb
sudo dpkg -i Minecraft.deb
sudo apt install Minecraft.deb
sudo apt --fix-broken install
sudo apt install ./Minecraft.deb
minecraft
sudo -
sudo sudo -
pwd
sudo ./marktext-x86_64.AppImage
sudo marktext-x86_64.AppImage
sudo bash marktext-x86_64.AppImage
sudo sh marktext-x86_64.AppImage
ls | grep "marktext"'\
\
'
ls | grep "marktext"
cd ../Desktop
sudo apt upgrade marktext
marktext
sudo apt install marktext
sudo apt install curl
curl -L https://raw.githubusercontent.com/marktext/marktext/develop/resources/linux/marktext.desktop -o $HOME/.local/share/applications/marktext.desktop\

chmod +x marktext-%version%-x86_64.AppImage\

chmod +x marktext-x86_64.AppImage\

rm marktext
rm -r marktext
rm -rf marktext
git clone https://github.com/marktext/marktext.git
cd ~/code
mv marktext theirCode
git clone https://github.com/antonfreeman/marktext.git
cd marktext
yarn install --check-files --frozen-lockfile
yarn run build:bin
git checkout feature
git pull origin feature
yarn install
ls build
./build/marktext-x86_64.AppImage
yarn run build
cd build
./marktext-x86_64.AppImage
if-config
ifconfig
nano .bashrc
sudo apt update
sudo apt install bash-completion
rm *
rm -rf ./*
create-venv .
pip install pyramid
source bin/activate
pip install pytorch
sudo pip install pytorch
sudo pip install torch
terminal
javac
cd py_env
nano pytest.py
python pytest.py
python -m compileall pytest.py
./pytest.py
ls bin
grep ".pyc" ls * 
ls *
cd __pycache__
./pytest.cpython-38.pyc
HEAD
HEAD -a
bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"\

nano .zshrc
nano /usr/share/zsh/manjaro-zsh-prompt 
keyboard-off
keyboard-on
python install pip
pip3
sudo apt install python3-pip
pip
pip install virtualenv
nano ~/.bashrc
pip install cython
cython
fg
bg
nano test.py
cython test.py
nano test.c
type test
cd test
cd .. 
rm -rf test
gcc test.c -o test
rm test*
pip install py2exe
sudo pip install py2exe
pip install py2exe\
\

sudo apt-get install python3-pip\

python pip --upgrade pip
python  --upgrade pip
pip install urllib3
pip install pandas
sudo pip3 install py2exe
mkcd py_env
python3 -m venv
 apt-get install python3-venv
sudo  apt-get install python3-venv
python3 -m venv .
create-venv
nano ~/.zshrc
sudo apt-get upgrade bluman\

sudo apt-get upgrade blueman\

which blueman
which blue
which ls
sudo apt-get install blueman\

sudo apt install ffmpeg\

sudo add-apt-repository ppa:obsproject/obs-studio\

sudo apt install obs-studio\

sudo apt-get install youtube-dl
youtube-dl -v
youtube-dl -U
youtube-dl -i -f mp4 --yes-playlist https://www.youtube.com/playlist?list=PLr-ThhSNjVDkitSFIxL8cMtZDi3yXGb0c
sudo poweroff
sudo apt install wireshark
git clone https://github.com/vinceliuice/Canvas-theme.git
cd Canvas-theme
rm -rf Tela-icon-theme
git clone https://github.com/vinceliuice/Tela-icon-theme.git
cd Tela-icon-theme
./install.sh -a
git clone https://github.com/vinceliuice/Vimix-cursors.git
cd Vimix-cursors
./install.sh
sudo ./install.sh
git clone https://github.com/antonfreeman/OS-TEST-SUIT.git
cd Simulator_Project
gcc OS_SimDriver_6.c
gcc -c metadataops.c
nu
nau
ssh-nau
ssh asf222@rain.hpc.nau.edu
cd Downloads/Canvas-theme/
./Install
sudo apt install steam
steam
pip install --upgrade pip\

pip install tensorflow
conda install pytorch tensorboard torchvision cpuonly -c pytorch
rm -H
rm --help
cd apps
cd fox
cd ~
python | less
cd trash
sudo apt remove steam
sudo apt remove virtualbox
sudo apt remove xfce-terminal
cd advanced_C
cd parallel_homework
git add assignment_4/crazy_scientist_v3_asf222.c
git commit -m "save before local removal"
git clone https://github.com/antonfreeman/AI_Projects.git
cd AI_Projects
mkcd torch
nano single_hidden_layer.py
mkdir runs
rm -r runs && python single_hidden_layer.py && tensorboard --logdir=runs\

conda install pytorch tensorboard torchvision cpuonly -c pytorch\

cd AI_Projects/torch
alias test_simple="rm -r runs && python single_hidden_layer.py && tensorboard --logdir=runs"\

test_simple
cd ~/code/OS-TEST-SUIT
git diff
git restore Simulator_Project/*
cd ../AI_Projects/torch
deactivate
conda deactivate
gcc --version
gtk
parted
sudo add-apt-repository ppa:cubic-wizard/release\

sudo apt update\

sudo apt install cubic\

apt list
apt list >> installed.txt
apt list --installed
apt list --installed > installed.txt
comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)\

apt-mark showmanual\

apt-mark showmanual > installed.txt
dconf read /org/gnome/shell/favorite-app
dconf read /org/gnome/shell/favorite-apps
cd code 
git add *
git commit -m "synced with other computers"
git push origin master
youtube-dl
youtube-dl --help
which youtube-dl
git add Programs/youtube-dl
ssh asf222@linux.cefins.nau.edu
scp sim03 asf222@linux.cefns.nau.edu:~/to_grade
scp Sim03_545717.tar.gz asf222@linux.cefns.nau.edu:~/to_grade
atom .
ssh asf222@linux.cefns.nau.edu
cd so
cd OS-TEST-SUIT
git history
git log
cd desktop
make -f *_mf
./sim02 -rs config0.cnf
cd Core_Files
wireshark
sudo apt install andriod-studio
sudo apt install android-studio
sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386\

sudo wireshark &
mv ./android-studio /usr/local/
sudo mv ./android-studio /usr/local/
android-studio
cd /usr/local/android-studio
cd bin
cd /usr/local/android-studio/bin
./studio.sh
sudo rm /usr/local/android-studio
sudo rm -rf /usr/local/android-studio
cd code
git clone https://github.com/antonfreeman/Linux_Config.git
cd Linux_Config
cd scripts
chmod 777 setup.sh
./setup.sh
clean
clear
cd code/Linux_Config
git ststus
git add scripts/setup.sh
git status
gsettings set org.gnome.desktop.interface icon-theme 'Tela-red-dark'
gsettings set org.gnome.desktop.interface icon-theme 'tela-blue-dark'
gsettings get org.gnome.desktop.interface icon-theme
gsettings set org.gnome.desktop.interface icon-theme 'Tela-blue-dark'
restart
killall -3 gnome-shell
gsettings set org.gnome.desktop.screensaver picture-uri /home/anton/code/Linux_Config/wallpapers/wallpaper3.jpg
gsettings get org.gnome.desktop.screensaver picture-uri 
/etc/X11/default-display-manager
cat /etc/X11/default-display-manager
grep '/usr/s\?bin' /etc/systemd/system/display-manager.service
cd Downloads/
./genymotion-3.2.0-linux_x64
chmod 777 genymotion-3.2.0-linux_x64.bin
cd ..
genymotion
dmesg | grep -i vboxdrv
sudo dmesg | grep -i vboxdrv
sudo apt-get --reinstall install virtualbox-dkms
sudo apt-get install virtualbox virtualbox-dkms
virtual_box
sudo apt-get install virtualbox
cd ~/Downloads
./genymotion-3.2.0-linux_x64.bin
cd genymotion
chmod 777 genymotion
sudo ./genymotion
modinfo vboxdrv
sudo apt-get --reinstall install virtualbox-dkms\
sudo apt-get --reinstall install virtualbox-dkms\

sudo usermod -a -G vboxusers $USER
./genymotion
sudo apt upgrade --all
sudo apt upgrade -all
sudo apt upgrade all
sudo apt upgrade *
sudo apt upgrade
vBox
sudo apt installed
sudo apt install virtualbox
sudo apt-get list installed
dpkg -l
virtualbox
bash
curl https://minecraft.azureedge.net/bin-linux/bedrock-server-1.16.220.02.zip --output server.zip
node
cd Desktop
npm install node-fetch
npm install dom-parser
npm install -g npm
sudo npm install -g npm
node test.js
npm install fs
python test.py
mkcd
mkcd test
cd ~/Desktop
chmod 777 start_server
cd Server
cd Desktop/Server
./start_server
sudo apt remove cubic
cd code/OS-TEST-SUIT
git pull origin master
python
dd
sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL
dd if=/dev/nvme0n1p6 of=/dev/nvme0n1p6 bs=64K conv=noerror,sync
sudo -s
lsblk -l
sudo reboot
dconf dump / > dconf-settings.ini
cp zsh /usr/share/
cp -r zsh /usr/share/
sudo cp -r zsh /usr/share/
sudo cp ~/Downloads/zsh /usr/share/
sudo cp -r ~/Downloads/zsh /usr/share/
zsh
chsh -s $(which zsh)
exit
cd Downloads
ls
dpkg -i atom-amd64.deb
sudo dpkg -i atom-amd64.deb
