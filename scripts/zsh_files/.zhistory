git checkout -b hello
touch hello.txt
git add hello.txt
chsh -s $(which zsh)
ncat
rm -rf /etc/mysql
sudo rm -rf /etc/mysql
sql-start
mysql -u root -p
sql-stop
sudo apt-get remove --purge mysql-server mysql-client mysql-common -y
sudo apt-get autoremove -y
sudo apt-get autoclean
sudo mysql_secure_installation
systemctl status mysql.service
sudo mysql
mysql -u anton -p
sql-connect anton
sql-login root
sudo systemctl stop mysql
sql-status
sudo systemctl start mysql
sudo apt install my-sql
sudo apt install mysql-server
apt install open-jdk 
sudo apt install open-jdk 
sudo apt install openjdk-11-jdk
git add housekeeper_starter.c
git commit -m "added almost working code still signal problems"
git merge implement
git push --all
nano ./zshrc
cd assignment_3
timedatectl set-local-rtc 1 --adjust-system-clock
timedatectl
sudo apt install settings
sudo apt-get install ubuntu-desktop
sudo apt-get install bluez bluez-alsa bluez-audio bluez-btsco bluez-compat bluez-cups bluez-dbg bluez-gstreamer bluez-hcidump bluez-pcmcia-support bluez-tools bluez-utils python-bluez bluewho indicator-bluetooth libbluetooth-dev  libgnome-bluetooth11 libbluetooth3
sudo apt install blueman -y && blueman-manager
sudo apt install chrome
sudo dpkg -i google-chrome-stable_current_amd64.deb
git checkout implement
 xset led 3 
 xset led on
echo 2 | sudo tee /sys/class/leds/asus::kbd_backlight/brightness 
deb zoom_amd64.deb
sudo apt install zoom
sudo apt-get install i3
sudo logout
sudo pkill -u anton
sudo apt remove i3
sudo apt remove i3-wm
mysql
cd Downloads/Tela-icon-theme
./install purple
./install.sh purple
which atom
sudo apt remove atom
sudo snap remove atom
dpkg -i atom-amd64.deb
sudo apt install libgconf-2-4
chmod u+x Inkscape-3bc2e81-x86_64.AppImage
flatpack
flatpac
sudo do-release-upgrade
sudo do-release-upgrade -c
git pull origin implement
ls 
git add assignment_4/
git commit -m "added files for assignment 4"
lsb_release -a
dpkg -i discord-0.0.12.deb
sudo apt install libgconf-2-4 
sudo dpkg -i discord-0.0.12.deb
sudo apt install mysql-workbench-community
sudo dpkg -i mysql-workbench-community-dbgsym_8.0.22-1ubuntu20.10_amd64.deb
sudo add-apt-repository ppa:inkscape.dev/stable
apt list --upgradable
sudo apt upgrade
sudo apt upgrade guile-2.2-libs
sudo apt list --upgradable
sudo apt install inkscape
sudo apt install vlc
sudo apt install rhythmbox
which rhythmbox
gcc
which gcc
sudo apt install gvfs-bin
sudo software-properties-gtk 
sudo apt-get install -f
sudo apt-get update -y
sudo add-apt-repository ppa:ubuntu-desktop/ppa 
sudo apt-get install -y gvfs-bin
dpkg -i gvfs-bin_1.44.1-1ubuntu1_amd64.deb
sudo dpkg -i gvfs-bin_1.44.1-1ubuntu1_amd64.deb
sudo dpkg -i atom
sudo dpkg -i atom-amd64.deb
sudo dpkg -i atom-amd64\(1\).deb
sudo apt-get install build-essential git libsecret-1-dev fakeroot rpm libx11-dev libxkbfile-dev
sudo apt install flatpak
sudo apt install gnome-software-plugin-flatpak
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
mkcd 
make
sudo apt install brackets
cd Downloads/
dpkg -i Brackets.Release.1.14.1.64-bit.deb
sudo apt install libpango1.0-0 libcurl3
sudo apt install libpango1.0-0
sudo apt install atom
snap install atom
snap install libpango1.0-0
sudo apt-get install libpango1.0-0
sudo dpkg -i Brackets.Release.1.14.1.64-bit.deb
snap install brackets
snap install brackets --classic
wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
sudo sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list'
apt --fix-broken install
sudo apt-get install atom
cp atom.svg /snap/atom/263/usr/share/atom/
sudo cp atom.svg /snap/atom/263/usr/share/atom/
tar xf atom-amd64.tar.gz
cd atom-1.52.0-amd64
atom
./atom
which software
clear && zsh
gcc -fopenmp -lm crazy_scientist_v1_asf222.c -o test && ./test
gcc -fopenmp -lm crazy_scientist_v1_asf222.c -o test 
python test.py 1 2 3
python test.py 1 2 
gcc -fopenmp crazy_scientist_v1_asf222.c -o test -lm 
python test.py 2 2 
  #pragma omp parallel private(i,j) shared(mat)
git commit -m "converted section to parallel for parts"
clear && ./test
gcc -fopenmp crazy_scientist_v2_asf222.c -o test -lm 
gcc -fopenmp crazy_scientist_v1_asf222.c -o test -lm
gcc -fopenmp crazy_scientist_v2_asf222.c -o test -lm
git commit -m "given up up question 2"
git add crazy_scientist_v3_asf222.c -m "good enough"
git commit -m "good enough"
git rm --all
git rm -all
git rm -n
git rm assignment_4
git rm assignment_4 -r
rm -rf assignment_4
cd parallel_homework
git checkout implement_4
cd assignment_4
nano crazy_scientist_v3_asf222.c
rm -rm cmake-build-debug
rm -rf cmake-build-debug
rm -rf CMakeLists.txt
rm -rf main.c
rm -rf .idea
git add -all
git add --all
git commit -m "roundabout fix"
git pull origin implement_4
git push origin implement_4
rm -rf parallel_homework
git clone https://github.com/antonfreeman/parallel_homework.git
gcc -fopenmp crazy_scientist_v3_asf222.c -o test -lm
gcc -fopenmp crazy_scientist_v4_asf222.c -o test -lm
git commit crazy_scientist_v4_asf222.c -m "ERROR: does not go to do_work"
cd /
cd usr
cd share
cd zsh
ls -l
nano manjaro-zsh-config
cd cod
cd parallel_homework/assignment_4
cp crazy_scientist_v1_asf222.c crazy_scientist_v2_asf222.c
cp crazy_scientist_v1_asf222.c crazy_scientist_v3_asf222.c
cp crazy_scientist_v1_asf222.c crazy_scientist_v4_asf222.c
git add crazy_scientist_v1_asf222.c
git add crazy_scientist_v2_asf222.c
git add crazy_scientist_v3_asf222.c
git add crazy_scientist_v4_asf222.c
git commit -m "created files for problems 1-4"
git status
gcc -fopenmp crazy_scientist_v1.c -o crazy_scientist_v1\
./crazy_scientist_v1
gcc -fopenmp crazy_scientist_v1.c -o crazy_scientist_v1 && ./crazy_scientist_v1
gcc -fopenmp crazy_scientist_v1_asf222.c -o crazy_scientist_v1 && ./crazy_scientist_v1
alias compile="gcc -fopenmp crazy_scientist_v$1_asf222.c -o crazy_scientist_v$1 && ./crazy_scientist_v$1" 
compile 1
compile(){}
compile
test(){gcc -fopenmp crazy_scientist_v$1_asf222.c -o crazy_scientist_v$1  ./crazy_scientist_v$1}
test 1
sudo apt install shotwell
git checkout anton_GW4
git checkout -b anton_GW4
cd code/CS_450_Group_4/group_project_4
git pull origin anton_GW4
gcc -fopenmp -lm GW4-openmp_a_question.c -o test
gcc -fopenmp GW4-openmp_a_question.c -o test1 -lm
gcc -fopenmp GW4-openmp_a_question.c -o test2 -lm
gcc -fopenmp GW4-openmp_a_question.c -o test3 -lm
./test2
./test3
./test1
gcc -fopenmp GW4-openmp_a_question.c -o test -lm
git add GW4-openmp_a_question.c
git commit -m 
git commit -m "added final changes"
git push origin anton_GW4
cd cs
cd CS_450_Group_4/
git branch
git branch -a
git checkout anton
git checkout emily_a5
./test 5
gcc -fopenmp question1.c -o test -lm
./test 300
./test 1000
sudo apt install iio-sensor-proxy inotify-tools
./rotate.sh
sudo ./rotate.sh
sudo
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
sudo apt-add-repository https://cli.github.com/packages
sudo apt install gh
gh
gh clone antonfreeman/marktext
gh repo clone antonfreeman/marktext
gh auth login
gsettings set org.gnome.shell.extensions.user-theme name "Flat-Remix"
sudo apt install flat-remix-gnome
gsettings set org.gnome.desktop.interface gtk-theme "Flat-Remix-GTK-Blue"
gsettings set org.gnome.desktop.interface gtk-theme "Flat-Remix-Yellow-Dark-fullPanel"
sudo add-apt-repository ppa:daniruiz/flat-remix
 sudo apt-get update
sudo apt-get install flat-remix-gnome
sudo apt install flat-remix-gtk
hello(){}
test
nano hello.txt
cd ../code/
echo("hello")
echo hello
sudo apt-get install 7zip
sudo apt-get install 7z
sudo apt-get install p7zip-full
7z
7z x SF-Font-Pro.dmg
cd SanFranciscoPro
code
sudo apt-get install libx11-dev libxkbfile-dev libsecret-1-dev libfontconfig-dev
node
sudo apt-get install chromium-browser
npm
npm install electron
git show
git checkout master
rm -rf CS_450_Group_4
git clone https://github.com/antonfreeman/CS_450_Group_4.git
cd CS_450_Group_4
cd assignment_05
cd -
mkdir group_project_5
cd code/advanced_C
cp homework_12 homework_13
python3
ffg
gcc hw12.c -o test
mv hw12.c hw13.c
rm -rf advanced_C
git clone https://github.com/antonfreeman/advanced_C.git
mkdir homework_13
cd homework_13
gcc hw13.c -o test
git add hw13.c
git commit -m "finished hw13"
git push origin master
cd Orchis-theme-master
./install.sh
git pull --all
git pull origin master
sudo apt-get install libx11-dev libxkbfile-dev libsecret-1-dev libfontconfig-dev\
\

./marktext
git push origin develop
cd "/home/anton/code/advanced_C/homework_7"
./"hw7" undefined
dpkg -i code_1.51.1-1605051630_amd64.deb
sudo dpkg -i code_1.51.1-1605051630_amd64.deb
gsettings set org.gnome.shell.extensions.dash-to-dock intellihide false\

sudo apt install eog\

eog
gThumb
mkcd test
cd marktext/
cd linux-unpacked
cd ../..
cd code/curl-curl-7_50_0
gcc needed.c -o test
./test
git remote show origin
git checkout -b feature
yarn run test
git adduya/lib/ui/tablePicker/index.js
git add src/muya/lib/ui/tablePicker/index.js
git commit -m "fixed issue#2383"
yarn run unit
git push origin feature
yarn run lint
cd ~/Downloads
cd Tela-icon-theme
./install.sh yellow
cd code/marktext/
sudo apt install anyconnect
sudo apt-get install lib32z1 lib32ncurses5\

cd anyconnect-linux64-4.7.03052
cd vpn
./vpn_install.sh
cd ~
ssh anton@antonfreeman.com
ssh e1rarygeoprm@antonfreeman.com
sudo apt-get update\

ssh asf222@monsoon.hpc.nau.edu
ssh asf222@rain.hpc.nau.edu
dpkg -i Minecraft.deb
sudo dpkg -i Minecraft.deb
sudo apt install Minecraft.deb
sudo apt --fix-broken install
sudo apt install ./Minecraft.deb
minecraft
cd Downloads
sudo -
sudo sudo -
pwd
sudo ./marktext-x86_64.AppImage
sudo marktext-x86_64.AppImage
sudo bash marktext-x86_64.AppImage
sudo sh marktext-x86_64.AppImage
ls | grep "marktext"'\
\
'
ls | grep "marktext"
cd desktop
cd ../Desktop
sudo -s
sudo apt upgrade marktext
marktext
sudo apt install marktext
sudo apt install curl
curl -L https://raw.githubusercontent.com/marktext/marktext/develop/resources/linux/marktext.desktop -o $HOME/.local/share/applications/marktext.desktop\

cd Desktop
chmod +x marktext-%version%-x86_64.AppImage\

chmod +x marktext-x86_64.AppImage\

rm marktext
rm -r marktext
rm -rf marktext
git clone https://github.com/marktext/marktext.git
cd ~/Desktop
cd ~/code
mv marktext theirCode
git clone https://github.com/antonfreeman/marktext.git
cd marktext
yarn install --check-files --frozen-lockfile
yarn run build:bin
git checkout feature
git pull origin feature
yarn install
ls build
./build/marktext-x86_64.AppImage
yarn run build
cd build
./marktext-x86_64.AppImage
if-config
ifconfig
nano .bashrc
sudo apt update
sudo apt install bash-completion
bash
rm *
rm -rf ./*
create-venv .
pip install pyramid
source bin/activate
pip install pytorch
sudo pip install pytorch
sudo pip install torch
terminal
deactivate
javac
cd py_env
nano pytest.py
python pytest.py
python -m compileall pytest.py
./pytest.py
ls bin
grep ".pyc" ls * 
ls *
cd __pycache__
./pytest.cpython-38.pyc
cd code
cd advanced_C
HEAD
HEAD -a
bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"\

nano .zshrc
nano /usr/share/zsh/manjaro-zsh-prompt 
keyboard-off
keyboard-on
clear
python install pip
pip3
sudo apt install python3-pip
pip
pip install virtualenv
nano ~/.bashrc
pip install cython
cython
fg
bg
cd ..
nano test.py
cython test.py
nano test.c
type test
cd test
cd .. 
rm -rf test
gcc test.c -o test
rm test*
pip install py2exe
sudo pip install py2exe
pip install py2exe\
\

sudo apt-get install python3-pip\

python pip --upgrade pip
python  --upgrade pip
python
pip install urllib3
pip install pandas
sudo pip3 install py2exe
mkcd py_env
python3 -m venv
 apt-get install python3-venv
sudo  apt-get install python3-venv
python3 -m venv .
ls
create-venv
nano ~/.zshrc
zsh
sudo apt-get upgrade bluman\

sudo apt-get upgrade blueman\

which blueman
which blue
which ls
sudo apt-get install blueman\

sudo apt install ffmpeg\

sudo add-apt-repository ppa:obsproject/obs-studio\

sudo apt update\

sudo apt install obs-studio\

sudo apt-get install youtube-dl
youtube-dl
youtube-dl -v
youtube-dl -U
youtube-dl -i -f mp4 --yes-playlist https://www.youtube.com/playlist?list=PLr-ThhSNjVDkitSFIxL8cMtZDi3yXGb0c
sudo poweroff
sudo apt install wireshark
sudo reboot
cd Downloads
git clone https://github.com/vinceliuice/Canvas-theme.git
cd Canvas-theme
ls
./Install
cd Downloads
rm -rf Tela-icon-theme
git clone https://github.com/vinceliuice/Tela-icon-theme.git
cd Tela-icon-theme
./install.sh -a
cd ..
git clone https://github.com/vinceliuice/Vimix-cursors.git
cd Vimix-cursors
./install.sh
sudo ./install.sh
cd code
git clone https://github.com/antonfreeman/OS-TEST-SUIT.git
cd OS-TEST-SUIT
cd Simulator_Project
ls
gcc OS_SimDriver_6.c
gcc -c metadataops.c
cd code/OS-TEST-SUIT
ls
nu
nau
ssh-nau
ssh asf222@rain.hpc.nau.edu
clear
cd ..
cd Downloads/Canvas-theme/
git pull origin master
ls
./Install
sudo apt upgrade *
sudo apt upgrade --all
sudo apt upgrade all
sudo apt upgrade
sudo apt install steam
steam
pip install --upgrade pip\

pip install tensorflow
conda install pytorch tensorboard torchvision cpuonly -c pytorch
clear
rm -H
rm --help
cd apps
cd fox
cd ~
ls
python | less
python
cd trash
ls
sudo apt remove steam
sudo apt remove virtualbox
sudo apt remove xfce-terminal
cd code
cd advanced_C
cd parallel_homework
git status
git add assignment_4/crazy_scientist_v3_asf222.c
git commit -m "save before local removal"
git push origin master
cd ..
git clone https://github.com/antonfreeman/AI_Projects.git
cd AI_Projects
mkcd torch
ls
python
nano single_hidden_layer.py
mkdir runs
rm -r runs && python single_hidden_layer.py && tensorboard --logdir=runs\

conda install pytorch tensorboard torchvision cpuonly -c pytorch\

cd code
cd AI_Projects/torch
alias test_simple="rm -r runs && python single_hidden_layer.py && tensorboard --logdir=runs"\

test_simple
cd ~/code/OS-TEST-SUIT
git diff
git restore Simulator_Project/*
git pull origin master
cd ../AI_Projects/torch
git status
clear
deactivate
conda deactivate
python
gcc --version
gtk
ls
parted
sudo add-apt-repository ppa:cubic-wizard/release\

sudo apt update\

sudo apt install cubic\

apt list
apt list >> installed.txt
apt list --installed
apt list --installed > installed.txt
comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)\

apt-mark showmanual\

apt-mark showmanual > installed.txt
